package hust.soict.sec.airtable;

import com.google.gson.JsonArray;
import com.google.gson.*;
import com.google.gson.JsonObject;
import org.apache.hc.client5.http.classic.methods.HttpPost;
import org.apache.hc.client5.http.impl.classic.CloseableHttpClient;
import org.apache.hc.client5.http.impl.classic.HttpClientBuilder;
import org.apache.hc.core5.http.ClassicHttpResponse;
import org.apache.hc.core5.http.ParseException;
import org.apache.hc.core5.http.io.entity.EntityUtils;
import org.apache.hc.core5.http.io.entity.StringEntity;

import java.io.IOException;


public class Record{


    public static String createRecord(JsonElement records, String tableId, String baseId, String Token){
        String url = "https://api.airtable.com/v0/" + baseId + "/" + tableId;

        try (CloseableHttpClient client = HttpClientBuilder.create().build()) {

            JsonObject body = new JsonObject();
//            body.add("fields", fields);

//            JsonArray records = new JsonArray();
//            records.add(body);
//
            JsonObject fullBody = new JsonObject();
            fullBody.add("records", records);

            HttpPost post = new HttpPost(url);
            post.setHeader("Authorization", "Bearer " + Token);
            post.setHeader("Content-Type", "application/json");
            post.setEntity(new StringEntity(records.toString()));

            ClassicHttpResponse response = client.execute(post);

            if (response.getCode() == 200) {
                return EntityUtils.toString(response.getEntity());
            } else {
                Logs.writeLog("Error creating record: " + response.getCode());
                Logs.writeLog("fullBody: " + records);
                return null;
            }
        } catch (IOException | ParseException e) {
            Logs.writeLog("Error creating record: " + e.getMessage());
            return null;
        }
    }
}
